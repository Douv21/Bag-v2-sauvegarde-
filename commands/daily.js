const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('daily')
        .setDescription('R√©cup√©rer votre r√©compense quotidienne'),

    async execute(interaction, dataManager) {
        try {
            const userId = interaction.user.id;
            const guildId = interaction.guild.id;
            
            const userData = await dataManager.getUser(userId, guildId);
            
            const now = Date.now();
            const oneDay = 24 * 60 * 60 * 1000; // 24h en millisecondes
            const timeSinceLastDaily = now - (userData.lastDaily || 0);
            
            if (timeSinceLastDaily < oneDay) {
                const remaining = Math.ceil((oneDay - timeSinceLastDaily) / (60 * 60 * 1000));
                return await interaction.reply({
                    content: `‚è∞ Vous avez d√©j√† r√©cup√©r√© votre r√©compense aujourd'hui ! Prochaine r√©compense dans **${remaining}h**.`,
                    flags: 64
                });
            }
            
            // Calculer streak
            const wasYesterday = timeSinceLastDaily <= (oneDay * 1.5); // Grace period de 36h
            const newStreak = wasYesterday ? (userData.dailyStreak || 0) + 1 : 1;
            
            // Calculer r√©compense
            const baseReward = 200;
            const streakBonus = Math.min(newStreak * 10, 100); // Max 100‚Ç¨ bonus
            const karmaBonus = Math.max(0, (userData.karmaGood || 0) - (userData.karmaBad || 0)) * 5;
            const totalReward = baseReward + streakBonus + karmaBonus;
            
            // Mettre √† jour utilisateur avec dataManager
            userData.balance = (userData.balance || 1000) + totalReward;
            userData.dailyStreak = newStreak;
            userData.lastDaily = now;
            
            await dataManager.updateUser(userId, guildId, userData);
            
            const embed = new EmbedBuilder()
                .setColor('#ffd700')
                .setTitle('üéÅ R√©compense Quotidienne !')
                .setDescription(`Vous avez r√©cup√©r√© **${totalReward}‚Ç¨** !`)
                .addFields([
                    {
                        name: 'üí∞ R√©compense de Base',
                        value: `${baseReward}‚Ç¨`,
                        inline: true
                    },
                    {
                        name: 'üî• Bonus Streak',
                        value: `${streakBonus}‚Ç¨ (Jour ${newStreak})`,
                        inline: true
                    },
                    {
                        name: '‚öñÔ∏è Bonus Karma',
                        value: `${karmaBonus}‚Ç¨`,
                        inline: true
                    },
                    {
                        name: 'üí≥ Nouveau Solde',
                        value: `${userData.balance}‚Ç¨`,
                        inline: false
                    }
                ])
                .setFooter({ text: `Streak actuel: ${newStreak} jour(s) ‚Ä¢ Prochaine r√©compense dans 24h` });
                
            await interaction.reply({ embeds: [embed] });
            
        } catch (error) {
            console.error('‚ùå Erreur daily:', error);
            await interaction.reply({
                content: '‚ùå Une erreur est survenue.',
                flags: 64
            });
        }
    }
};